{"meta":{"title":"SeeFly的博客","subtitle":"","description":"","author":"SeeFly","url":"https://itwangmingfei.github.io","root":"/"},"pages":[{"title":"标签","date":"2020-05-09T13:30:38.000Z","updated":"2020-05-09T13:31:16.100Z","comments":false,"path":"tags/index.html","permalink":"https://itwangmingfei.github.io/tags/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-05-09T12:19:55.586Z","updated":"2020-05-09T11:05:34.561Z","comments":true,"path":"links/index.html","permalink":"https://itwangmingfei.github.io/links/index.html","excerpt":"","text":""},{"title":"书单","date":"2020-05-09T12:19:55.607Z","updated":"2020-05-09T11:05:34.561Z","comments":false,"path":"books/index.html","permalink":"https://itwangmingfei.github.io/books/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-05-09T12:19:55.622Z","updated":"2020-05-09T11:05:34.561Z","comments":false,"path":"about/index.html","permalink":"https://itwangmingfei.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"404 Not Found：该页无法显示","date":"2020-05-09T12:19:55.634Z","updated":"2020-05-09T11:05:34.560Z","comments":false,"path":"/404.html","permalink":"https://itwangmingfei.github.io/404.html","excerpt":"","text":""},{"title":"分类","date":"2020-05-09T12:19:55.598Z","updated":"2020-05-09T11:05:34.561Z","comments":false,"path":"categories/index.html","permalink":"https://itwangmingfei.github.io/categories/index.html","excerpt":"","text":""},{"title":"GIT项目","date":"2020-05-09T13:27:01.000Z","updated":"2020-05-09T13:27:03.660Z","comments":false,"path":"repository/index.html","permalink":"https://itwangmingfei.github.io/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"Laravel 增删改查","slug":"Laravel-增删改查","date":"2020-05-12T10:15:00.000Z","updated":"2020-05-12T10:30:09.591Z","comments":true,"path":"2020/05/12/Laravel-增删改查/","link":"","permalink":"https://itwangmingfei.github.io/2020/05/12/Laravel-%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/","excerpt":"","text":"增删改查https://github.com/itwangmingfei/laravel_model/blob/master/app/Http/Controllers/ViewController.php 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758use \\App\\Userpublic function index()&#123; return view('user');&#125;//添加数据public function add(Request $request)&#123; $input = $request-&gt;except('_token'); $name = $input['name']; $email = $input['email']; $password = md5(time()); User::create(['name'=&gt;$name,'email'=&gt;$email,'password'=&gt;$password]); return redirect('/post/list'); &#125;//获取数据public function get($id)&#123; //查主键第一种 //$row = User::find($id); //条件查询 $row = User::where('id',$id)-&gt;first(); return view(\"show\",['row'=&gt;$row]);&#125;public function save(Request $request)&#123; $input = $request-&gt;except('_token'); $id = $input['id']; $name = $input['name']; $email = $input['email']; //第一种 //$res = User::where('id',$id)-&gt;update(['name'=&gt;$name,'email'=&gt;$email]); //第二种 where('id',$id)-&gt;first() $user = User::find($id); $user-&gt;name = $name; $user-&gt;email = $email; $res = $user-&gt;save(); return redirect('/post/list');&#125;//删除public function delete($id)&#123; //第一种 //$res = user::where('id',$id)-&gt;delete(); //第二种where('id',$id)-&gt;first() $user = User::find($id); if (!empty($user))&#123; $res = $user-&gt;delete(); return redirect('/post/list'); &#125;else&#123; return redirect('/post/list'); &#125;&#125;public function List()&#123; $list = User::orderBy('id','desc')-&gt;paginate(2); return view('list',['list'=&gt;$list]);&#125;","categories":[{"name":"php","slug":"php","permalink":"https://itwangmingfei.github.io/categories/php/"},{"name":"laravel","slug":"php/laravel","permalink":"https://itwangmingfei.github.io/categories/php/laravel/"}],"tags":[{"name":"Laravel","slug":"Laravel","permalink":"https://itwangmingfei.github.io/tags/Laravel/"}],"author":"SeeFly"},{"title":"Laravel router","slug":"Laravel-router","date":"2020-05-12T09:48:00.000Z","updated":"2020-05-12T10:29:40.280Z","comments":true,"path":"2020/05/12/Laravel-router/","link":"","permalink":"https://itwangmingfei.github.io/2020/05/12/Laravel-router/","excerpt":"","text":"构建基本路由只需要一个 URI 与一个 闭包路由文件地址 routes文件夹 包含 api.php channels.php console.php web.phpweb.php123456789101112Route::get('/', function () &#123; return view('welcome');&#125;);方式Route::get($uri, $callback);Route::post($uri, $callback);Route::put($uri, $callback);Route::patch($uri, $callback);Route::match(['请求方式']$uri, $callback);Route::delete($uri, $callback);Route::options($uri, $callback);Route::any($uri, $callback); 根目录打开命令行1php artisan make:controller MyController 系统自动生成 app/Http/Controllers/MyController 1234567891011121314151617181920212223242526//建立方法 public function get()&#123; return \"get\"; &#125; public function post()&#123; return \"post\"; &#125; public function put()&#123; return \"put\"; &#125; public function patch()&#123; return \"patch\"; &#125; public function option()&#123; return \"option\"; &#125; public function delete()&#123; return \"delete\"; &#125; public function match()&#123; return \"match['post','get']\"; &#125; public function any()&#123; return \"any ['all']\"; &#125; 123456789//定义路由 web.phpRoute::get('/user/get','MyController@get');Route::post('/user/post','MyController@post');Route::put('/user/put','MyController@put');Route::patch('/user/patch','MyController@patch');Route::options('/user/option','MyController@option');Route::delete('/user/delete','MyController@delete');Route::match(['get','post'],'/user/match','MyController@match');Route::any('/user/any','MyController@any'); 因为有CSRF保护机制练习前需要关闭保护https://learnku.com/docs/laravel/7.x/csrf/7460 中间件下的 app/Http/Middleware/VerifyCsrfToken.php 12345 protected $except = [ //配置servername 'http://&#123;servername&#125;/user/*', ];&#125; 使用 PostMan请求 redirect 路由重定向123Route::get('log/here','LogController@here');Route::get('log/there','LogController@there');Route::redirect('log/here','/log/there'); view路由视图1Route::view('/view','view',['name'=&gt;'jon']); 视图取值 {{ name }}路由参数 正则验证 {name?}可为空，可设置默认值123Route::get('/get/&#123;id&#125;/&#123;name?&#125;',function($id,$name='tom')&#123; return \"UserID:\".$id.\" Username:\".$name;&#125;); 设置全局正则 匹配 参数 id 必须整数 ‘[0-9]+’ 的正则打开文件 app\\Providers\\RouteServiceProvider.php12345public function boot()&#123; //加入这个限制所有变量参数id 的验证 Route::pattern('id','[0-9]+'); parent::boot();&#125; 行内正则验证 aid123Route::get('/bl/&#123;aid&#125;',function($aid)&#123; return \"UserID:\".$aid;&#125;)-&gt;where('aid','[0-9]+'); 隐式绑定官方例子123Route::get('/user/&#123;user&#125;',function(App\\User $user)&#123; return $user-&gt;name;&#125;); 新建一个表测试一下123456CREATE TABLE `contents` ( `id` int(11) NOT NULL AUTO_INCREMENT, `title` varchar(222) DEFAULT NULL, `content` varchar(255) DEFAULT NULL, PRIMARY KEY (`id`)) ENGINE=MyISAM DEFAULT CHARSET=utf8; 创建model1php artisan make:model Content 打开model 设置绑定的条件1234public function getRouteKeyName()&#123; //这个地方可以定义任意contents表的段 return 'id';&#125; 添加路由 ，有数据返回对应值，无数据 返回404123Route::get('/content/&#123;content&#125;',function(App\\Content $content)&#123; return $content-&gt;title;&#125;); 有隐式就有显示显示绑定1234//这里面定义的 $user 对应 Route::get('/user/&#123;user&#125;',function($user)&#123; dd($user-&gt;name);&#125;); RouteServiceProvider.php 通过这里给{user}绑定 \\App\\User123456public function boot()&#123; parent::boot(); //顶一个 user 对应 \\app\\User Route::model('user', \\App\\User::class);&#125;","categories":[{"name":"php","slug":"php","permalink":"https://itwangmingfei.github.io/categories/php/"},{"name":"laravel","slug":"php/laravel","permalink":"https://itwangmingfei.github.io/categories/php/laravel/"}],"tags":[{"name":"Laravel","slug":"Laravel","permalink":"https://itwangmingfei.github.io/tags/Laravel/"}],"author":"SeeFly"},{"title":"php Laravel","slug":"php-Laravel","date":"2020-05-11T02:10:00.000Z","updated":"2020-05-12T10:30:52.903Z","comments":true,"path":"2020/05/11/php-Laravel/","link":"","permalink":"https://itwangmingfei.github.io/2020/05/11/php-Laravel/","excerpt":"","text":"LaravelLaravel是一套简洁、优雅的PHP Web开发框架(PHP Web Framework)。它可以让你从面条一样杂乱的代码中解脱出来； 它可以帮你构建一个完美的网络APP，而且每行代码都可以简洁、富于表达力。 在Laravel中已经具有了一套高级的PHP ActiveRecord实现 -- Eloquent ORM。 它能方便的将“约束（constraints）”应用到关系的双方，这样你就具有了对数据的完全控制，而且享受到ActiveRecord的所有便利。 Eloquent原生支持Fluent中查询构造器（query-builder）的所有方法。安装 composer依赖管理工具123curl -sS https://getcomposer.org/installer | phpsudo mv composer.phar /usr/local/bin/composercomposer --version 切换国内镜像123composer config -g repo.packagist composer https://packagist.phpcomposer.comorcomposer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ 更新 composer：12345678910composer selfupdate# 自动加载 composer require monolog/monolog# 查找composer search monolog# 更新所有依赖composer update# 列出所有已经安装的包composer show 安装 laravel1composer create-project --prefer-dist laravel/laravel &lt;&lt;project&gt;&gt; 安装laravel命令行执行12345composer global require \"laravel/installer=~1.1\"#配置环境变量 ~/.bash_profile~/.composer/vendor/binlaravel new &lt;&lt;project&gt;&gt; 配置nginx 解决访问其他路由404location 中加入 try_files $uri $uri/ /index.php?$query_string; location / { index index.html index.htm index.php; autoindex on; include /usr/local/etc/nginx/conf.d/php-fpm; try_files $uri $uri/ /index.php?$query_string; }修改hostsudo vim /etc/host 127.0.0.1 servername","categories":[{"name":"php","slug":"php","permalink":"https://itwangmingfei.github.io/categories/php/"},{"name":"laravel","slug":"php/laravel","permalink":"https://itwangmingfei.github.io/categories/php/laravel/"}],"tags":[{"name":"php","slug":"php","permalink":"https://itwangmingfei.github.io/tags/php/"},{"name":"Laravel","slug":"Laravel","permalink":"https://itwangmingfei.github.io/tags/Laravel/"}],"author":"SeeFly"},{"title":"Linux 贴脸命令","slug":"Linux","date":"2020-05-10T05:49:00.000Z","updated":"2020-05-12T11:52:13.204Z","comments":true,"path":"2020/05/10/Linux/","link":"","permalink":"https://itwangmingfei.github.io/2020/05/10/Linux/","excerpt":"","text":"netstat 查看端口1netstat source 执行配置1source ~/.bash_profile locate 查找文件1yum install mlocate locate 文件ps 常用参数：－auxf12ps -auxf 显示进程状态ps -auxf | grep nginx 123456789rmdir：Remove Directory（删除目录）rm：Remove（删除目录或文件） rm -rf aaa.txtmkdir：Make Directory(创建目录)touch: touch ; touch aa.txtmv: Move file mv aa.txt ./bb/bbb.txtrm: Remove file rm -rf aa.txtcp: Copy file cp aa.txt bb.txtchown: Change owner : chown www:www nginx/chmod: Change mode : chmod -R 777 public/ vim安装使用12345yum install vimvim/serarch:set nu:wq!","categories":[{"name":"linux","slug":"linux","permalink":"https://itwangmingfei.github.io/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://itwangmingfei.github.io/tags/linux/"}],"author":"SeeFly"},{"title":"php-method","slug":"php方法","date":"2020-05-10T02:06:00.000Z","updated":"2020-05-10T09:32:38.960Z","comments":true,"path":"2020/05/10/php方法/","link":"","permalink":"https://itwangmingfei.github.io/2020/05/10/php%E6%96%B9%E6%B3%95/","excerpt":"","text":"1，获取链接后缀parse_url basename explode end1234567891011121314&lt;?php//获取后缀$url =\"https://www.yisu.com/reg.php?id=22\";//先切分$res = parse_url($url);var_dump($res);//获取basename$path = basename($res[\"path\"]);var_dump($path);//获取数组$arr = explode(\".\", $path);//获取最后一个元素echo (end($arr));?&gt; 123456789101112131415161718输出结果：array(4) &#123; [\"scheme\"]=&gt; string(5) \"https\" [\"host\"]=&gt; string(12) \"www.yisu.com\" [\"path\"]=&gt; string(8) \"/reg.php\" [\"query\"]=&gt; string(5) \"id=22\"&#125;array(2) &#123; [0]=&gt; string(3) \"reg\" [1]=&gt; string(3) \"php\"&#125;string(3) \"php\" 2，PHP代码确保多个进程同时写入同一个文件成功fopen flock LOCK_EX LOCK_UN fwrite1234567891011121314151617181920212223&lt;?phpecho \"&lt;pre&gt;\"; $handle = fopen(\"est.txt\", \"a+\");// 排它性的锁定if (flock($handle,LOCK_EX))&#123; fwrite($handle,\"W222\"); // release lock flock($handle,LOCK_UN);&#125;else&#123; echo \"Error locking file!\";&#125;fclose($handle);$Reader = fopen(\"est.txt\", \"r\");$content = fread($Reader, filesize(\"est.txt\"));var_dump($content);fclose($Reader)?&gt; 3，创建多级目录mkdir is_dir12345678910111213141516171819&lt;?php//创建多级目录echo \"&lt;pre&gt;\";$path = \"php/php1/php2\";echo $path;function create_dir($path,$mode=0777)&#123; if(is_dir($path))&#123; return \"目录已存在\"; &#125;else&#123; $res = mkdir($path,$mode,true); if($res) &#123; return \"创建成功\"; &#125;else&#123; return \"创建失败\"; &#125; &#125;&#125;$res = create_dir($path);var_dump($res); 4,遍历文件夹opendir readdir is_file12345678910111213141516171819202122232425&lt;?phpecho \"&lt;pre&gt;\";function fileShow($dir)&#123; $handle = opendir($dir); $filelist = array(); while($file = readdir($handle))&#123; if ($file !==\".\" &amp;&amp; $file !==\"..\") &#123; $lfile = $dir.\"/\".$file; if (is_file($lfile))&#123; //表示文件 $filelist[$dir][]=$lfile; &#125;else&#123; //文件夹 $filelist[$dir][]=fileShow($lfile); &#125; &#125; $i++; &#125; closedir($handle); return $filelist;&#125;$list = fileShow('.'); var_dump($list); 5,冒泡算法12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;?php$listnums = array(1,23,3,5,32,50);//array(6) &#123; [0]=&gt; int(1) [1]=&gt; int(23) [2]=&gt; int(3) [3]=&gt; int(5) [4]=&gt; int(32) [5]=&gt; int(50) &#125;//从后向前获取值function showArray($listnums)&#123; $lenth = count($listnums); //确定要循环的次数 for ($i=1; $i &lt; $lenth ; $i++) &#123; //$i=1。因为是两两相比所以如果有6个数据需要对比5次 所以 &lt; $lenth for ($j=0; $j &lt; $lenth - $i ; $j++) &#123; //索引取值每一层 最后一个值不要要对比 倒数第二个和它对比 $lenth - $i 也就是5次 索引0-4 //第一次循环 从第一个和第二个对比比 5次对比 获取一个最大值或者最小值 索引 0-4 //第二次循环已经获取到一个我们想要的值， 4次对比 最后一个值不需要对比... 索引 0-3 ， 3次 索引 0-2 ，2次 索引 0-1 ， 1次 出来结果 if ($listnums[$j] &lt; $listnums[$j+1]) &#123; # 将最小的值对比到数组最后面 $t = $listnums[$j+1]; $listnums[$j+1] = $listnums[$j]; $listnums[$j] = $t; &#125; &#125; &#125; return $listnums;&#125;//从前向后获取function showArray2($listnums)&#123; $lenth = count($listnums); //确定要循环的次数 for ($i=0; $i &lt; $lenth; $i++) &#123; for ($j=$i+1; $j &lt; $lenth; $j++) &#123; if($listnums[$i] &lt; $listnums[$j])&#123; $t = $listnums[$j]; $listnums[$j] = $listnums[$i]; $listnums[$i] = $t; &#125; &#125; &#125; return $listnums;&#125;echo \"&lt;pre&gt;\";$newnums = (showArray($listnums));var_dump($newnums); ?&gt; 6, 1234567890abcdefg 倒着输出strrev or while . 连接符号的使用12345678910111213//反转函数1$str = \"1234567890abcdefg\";$newstr = strrev($str);echo $newstr;//=========2$str = '1234567890abcdefg';$newstr = '';$i = 0;while(isset($str[$i]) &amp;&amp; $str[$i]!=null)&#123; $newstr = $str[$i++].$newstr;&#125;echo $newstr;","categories":[{"name":"php","slug":"php","permalink":"https://itwangmingfei.github.io/categories/php/"}],"tags":[{"name":"php方法","slug":"php方法","permalink":"https://itwangmingfei.github.io/tags/php%E6%96%B9%E6%B3%95/"}],"author":"SeeFly"},{"title":"Mysql存储引擎myisam 和 innodb的区别","slug":"Mysql","date":"2020-05-09T13:46:00.000Z","updated":"2020-05-10T07:47:48.423Z","comments":true,"path":"2020/05/09/Mysql/","link":"","permalink":"https://itwangmingfei.github.io/2020/05/09/Mysql/","excerpt":"","text":"myisam 和 innodb 这两个存储引擎的区别1，myisam：不支持事务，表级别锁，易产生碎片，需要经常优化，适合频繁操作查询的应用。 2，innodb：支持事务安全的引擎，支持外键、行锁、事务是他的最大特点。如果有大量的update和insert，建议使用InnoDB，特别是针对多个并发和QPS较高的情况。","categories":[{"name":"mysql","slug":"mysql","permalink":"https://itwangmingfei.github.io/categories/mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"https://itwangmingfei.github.io/tags/mysql/"},{"name":"mysql存储引擎区别","slug":"mysql存储引擎区别","permalink":"https://itwangmingfei.github.io/tags/mysql%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E5%8C%BA%E5%88%AB/"}],"author":"SeeFly"},{"title":"Git 基础命令","slug":"Git","date":"2020-05-09T13:43:00.000Z","updated":"2020-05-10T07:48:20.421Z","comments":true,"path":"2020/05/09/Git/","link":"","permalink":"https://itwangmingfei.github.io/2020/05/09/Git/","excerpt":"","text":"下载clone 12345git clone “git地址”git add . git commit -m \"提交的什么\"git push origin master git设置用户 12345$ git config user.name$ git config user.email$ git config --global user.name \"xxxx\"$ git config --global user.email \"xxxx\" 创建新分支 1git checkout -b 新分支名 查看分支 1git branch 切换分支 1git checkout 分支名 版本回滚某个版本 1git reset --hard 版本号 merge 1git merge branch git 生成密钥 1ssh-keygen -t rsa -C \"账号邮箱\" git 屏蔽已经存在的文件 1Git update-index --assume-unchanged PATH（文件路径）","categories":[{"name":"git","slug":"git","permalink":"https://itwangmingfei.github.io/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://itwangmingfei.github.io/tags/git/"}],"author":"SeeFly"},{"title":"GO","slug":"GO","date":"2020-05-09T13:42:00.000Z","updated":"2020-05-09T13:44:29.889Z","comments":true,"path":"2020/05/09/GO/","link":"","permalink":"https://itwangmingfei.github.io/2020/05/09/GO/","excerpt":"","text":"G","categories":[{"name":"go","slug":"go","permalink":"https://itwangmingfei.github.io/categories/go/"}],"tags":[{"name":"go","slug":"go","permalink":"https://itwangmingfei.github.io/tags/go/"}],"author":"SeeFly"},{"title":"Nginx for Mac","slug":"Nginx","date":"2020-05-09T13:42:00.000Z","updated":"2020-05-09T14:31:42.541Z","comments":true,"path":"2020/05/09/Nginx/","link":"","permalink":"https://itwangmingfei.github.io/2020/05/09/Nginx/","excerpt":"","text":"1，打开终端2，输入1234brew --updatebrew search nginx //查看nginx是否安装brew info nginx //查看nginx配置 端口 目录 brew install nginx 3,启动nginx1234567sudo nginx //启动sudo nginx -s reload //重启sudo nginx -s stop //停止sudo nginx -t //检测配置文件 4,查看1http://127.0.0.1:8080","categories":[{"name":"nginx","slug":"nginx","permalink":"https://itwangmingfei.github.io/categories/nginx/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://itwangmingfei.github.io/tags/nginx/"}],"author":"SeeFly"},{"title":"PHP for Mac +nginx","slug":"PHP面试题","date":"2020-05-09T13:35:00.000Z","updated":"2020-05-11T13:49:14.494Z","comments":true,"path":"2020/05/09/PHP面试题/","link":"","permalink":"https://itwangmingfei.github.io/2020/05/09/PHP%E9%9D%A2%E8%AF%95%E9%A2%98/","excerpt":"","text":"查看php文件路径1locate php-fpm /private/etc/php-fpm.conf.default/private/etc/php-fpm.d/www.conf.default 12345sudo cp /private/etc/php-fpm.conf.default /private/etc/php-fpm.conf// 打开 复制的文件打开并修改路径 error_log = /usr/local/var/log/php-fpm.logsudo cp /private/etc/php-fpm.d/www.conf.default /private/etc/php-fpm.d/www.confsudo killall php-fpm //清除sudo php-fpm -D //重启 关联nginx123456789101112131415161718192021222324vim /usr/local/etc/nginx/nginx.conf===============================直接覆盖events &#123; worker_connections 256;&#125;http &#123; include mime.types; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log /usr/local/var/log/access.log main; sendfile on; keepalive_timeout 65; port_in_redirect off; include /usr/local/etc/nginx/conf.d/*.conf;&#125; 创建 conf.d12cd /usr/local/etc/nginx/mkdir conf.d 创建文件 php-fpm123456789101112cd conf.dvim php-fpm======================#proxy the php scripts to php-fpmlocation ~ \\.php$ &#123; try_files $uri = 404; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_intercept_errors on; include /usr/local/etc/nginx/fastcgi.conf;&#125; 创建文件 default.conf12345678910111213141516171819202122232425vim default.conf====================server &#123; listen 80; server_name localhost; root 项目路径; access_log /usr/local/var/log/nginx/access.log main; location / &#123; index index.html index.htm index.php; autoindex on; include /usr/local/etc/nginx/conf.d/php-fpm; &#125; location = /info &#123; allow 127.0.0.1; deny all; rewrite (.*) /.info.php; &#125; error_page 404 /404.html; error_page 403 /403.html;&#125;","categories":[{"name":"php","slug":"php","permalink":"https://itwangmingfei.github.io/categories/php/"}],"tags":[{"name":"php","slug":"php","permalink":"https://itwangmingfei.github.io/tags/php/"}],"author":"John Doe"}],"categories":[{"name":"php","slug":"php","permalink":"https://itwangmingfei.github.io/categories/php/"},{"name":"laravel","slug":"php/laravel","permalink":"https://itwangmingfei.github.io/categories/php/laravel/"},{"name":"linux","slug":"linux","permalink":"https://itwangmingfei.github.io/categories/linux/"},{"name":"mysql","slug":"mysql","permalink":"https://itwangmingfei.github.io/categories/mysql/"},{"name":"git","slug":"git","permalink":"https://itwangmingfei.github.io/categories/git/"},{"name":"go","slug":"go","permalink":"https://itwangmingfei.github.io/categories/go/"},{"name":"nginx","slug":"nginx","permalink":"https://itwangmingfei.github.io/categories/nginx/"}],"tags":[{"name":"Laravel","slug":"Laravel","permalink":"https://itwangmingfei.github.io/tags/Laravel/"},{"name":"php","slug":"php","permalink":"https://itwangmingfei.github.io/tags/php/"},{"name":"linux","slug":"linux","permalink":"https://itwangmingfei.github.io/tags/linux/"},{"name":"php方法","slug":"php方法","permalink":"https://itwangmingfei.github.io/tags/php%E6%96%B9%E6%B3%95/"},{"name":"mysql","slug":"mysql","permalink":"https://itwangmingfei.github.io/tags/mysql/"},{"name":"mysql存储引擎区别","slug":"mysql存储引擎区别","permalink":"https://itwangmingfei.github.io/tags/mysql%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E5%8C%BA%E5%88%AB/"},{"name":"git","slug":"git","permalink":"https://itwangmingfei.github.io/tags/git/"},{"name":"go","slug":"go","permalink":"https://itwangmingfei.github.io/tags/go/"},{"name":"nginx","slug":"nginx","permalink":"https://itwangmingfei.github.io/tags/nginx/"}]}